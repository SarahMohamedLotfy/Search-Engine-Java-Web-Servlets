Arrays in C/C++ - GeeksforGeeks , GeeksforGeeks × search Custom Search Sort by: Relevance Relevance Date x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT CAT Quiz Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Science Quizzes Computer Subject CS – Placements CSS Dart Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Full Form Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap How To HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc MongoDB Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements PostgreSQL Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes R Language Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Solidity Sorting SQL Stack Strings Tableau Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorialskeyboard_arrow_down Algorithmskeyboard_arrow_right Analysis of Algorithmskeyboard_arrow_right Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structureskeyboard_arrow_right Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languageskeyboard_arrow_right C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Cornerkeyboard_arrow_right Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATEkeyboard_arrow_right GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CSkeyboard_arrow_right ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CSkeyboard_arrow_right UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjectskeyboard_arrow_right Mathematics Operating Systems DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologieskeyboard_arrow_right HTML CSS JavaScript PHP JQuery Studentskeyboard_arrow_down Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship MenuTutorials- Algorithms-- Analysis of Algorithms--- Asymptotic Analysis--- Worst, Average and Best Cases--- Asymptotic Notations--- Little o and little omega notations--- Lower and Upper Bound Theory--- Analysis of Loops--- Solving Recurrences--- Amortized Analysis--- What does ‘Space Complexity’ mean?--- Pseudo-polynomial Algorithms--- Polynomial Time Approximation Scheme--- A Time Complexity Question-- Searching Algorithms-- Sorting Algorithms-- Graph Algorithms-- Pattern Searching-- Geometric Algorithms-- Mathematical-- Randomized Algorithms-- Greedy Algorithms-- Dynamic Programming-- Divide and Conquer-- Backtracking-- Branch and Bound-- All Algorithms- Data Structures-- Arrays-- Linked List-- Stack-- Queue-- Binary Tree-- Binary Search Tree-- Heap-- Hashing-- Graph-- Advanced Data Structure-- Matrix-- Strings-- All Data Structures- Languages-- C-- C++-- Java-- Python-- C#-- Javascript-- JQuery-- SQL-- PHP-- Scala-- Perl-- Go Language-- HTML-- CSS-- Kotlin- Interview Corner-- Company Preparation-- Top Topics-- Practice Company Questions-- Interview Experiences-- Experienced Interviews-- Internship Interviews-- Competitive Programming-- Design Patterns-- Multiple Choice Quizzes- GATE-- GATE CS Notes 2020-- Last Minute Notes-- GATE CS Solved Papers-- GATE CS Orignal Papers and Official Keys-- GATE 2020 Dates-- GATE CS 2020 Syllabus-- Important Topics for GATE CS-- Sudo GATE 2021- ISRO CS-- ISRO CS Solved Papers-- ISRO CS Original Papers and Official Keys-- ISRO CS Syllabus for Scientist/Engineer Exam- UGC NET CS-- UGC NET CS Notes Paper II-- UGC NET CS Notes Paper III-- UGC NET CS Solved Papers- CS Subjects-- Mathematics-- Operating Systems-- DBMS-- Computer Networks-- Computer Organization and Architecture-- Theory of Computation-- Compiler Design-- Digital Logic-- Software Engineering- Web Technologies-- HTML-- CSS-- JavaScript-- PHP-- JQueryStudents- Get Hired- Campus Ambassador Program- Project- Geek of the Month- Campus Geek of the Month- Placement Course- Competitive Programming- Testimonials- Geek on the Top- Careers- Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? × search Custom Search Sort by: Relevance Relevance Date Login Hire with us!Arrays in C/C++ , Arrays in C/C++ - GeeksforGeeks GeeksforGeeks × search Custom Search Sort by: Relevance Relevance Date x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT CAT Quiz Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Science Quizzes Computer Subject CS – Placements CSS Dart Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Full Form Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap How To HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc MongoDB Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements PostgreSQL Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes R Language Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Solidity Sorting SQL Stack Strings Tableau Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorialskeyboard_arrow_down Algorithmskeyboard_arrow_right Analysis of Algorithmskeyboard_arrow_right Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structureskeyboard_arrow_right Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languageskeyboard_arrow_right C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Cornerkeyboard_arrow_right Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATEkeyboard_arrow_right GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CSkeyboard_arrow_right ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CSkeyboard_arrow_right UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjectskeyboard_arrow_right Mathematics Operating Systems DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologieskeyboard_arrow_right HTML CSS JavaScript PHP JQuery Studentskeyboard_arrow_down Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship MenuTutorials- Algorithms-- Analysis of Algorithms--- Asymptotic Analysis--- Worst, Average and Best Cases--- Asymptotic Notations--- Little o and little omega notations--- Lower and Upper Bound Theory--- Analysis of Loops--- Solving Recurrences--- Amortized Analysis--- What does ‘Space Complexity’ mean?--- Pseudo-polynomial Algorithms--- Polynomial Time Approximation Scheme--- A Time Complexity Question-- Searching Algorithms-- Sorting Algorithms-- Graph Algorithms-- Pattern Searching-- Geometric Algorithms-- Mathematical-- Randomized Algorithms-- Greedy Algorithms-- Dynamic Programming-- Divide and Conquer-- Backtracking-- Branch and Bound-- All Algorithms- Data Structures-- Arrays-- Linked List-- Stack-- Queue-- Binary Tree-- Binary Search Tree-- Heap-- Hashing-- Graph-- Advanced Data Structure-- Matrix-- Strings-- All Data Structures- Languages-- C-- C++-- Java-- Python-- C#-- Javascript-- JQuery-- SQL-- PHP-- Scala-- Perl-- Go Language-- HTML-- CSS-- Kotlin- Interview Corner-- Company Preparation-- Top Topics-- Practice Company Questions-- Interview Experiences-- Experienced Interviews-- Internship Interviews-- Competitive Programming-- Design Patterns-- Multiple Choice Quizzes- GATE-- GATE CS Notes 2020-- Last Minute Notes-- GATE CS Solved Papers-- GATE CS Orignal Papers and Official Keys-- GATE 2020 Dates-- GATE CS 2020 Syllabus-- Important Topics for GATE CS-- Sudo GATE 2021- ISRO CS-- ISRO CS Solved Papers-- ISRO CS Original Papers and Official Keys-- ISRO CS Syllabus for Scientist/Engineer Exam- UGC NET CS-- UGC NET CS Notes Paper II-- UGC NET CS Notes Paper III-- UGC NET CS Solved Papers- CS Subjects-- Mathematics-- Operating Systems-- DBMS-- Computer Networks-- Computer Organization and Architecture-- Theory of Computation-- Compiler Design-- Digital Logic-- Software Engineering- Web Technologies-- HTML-- CSS-- JavaScript-- PHP-- JQueryStudents- Get Hired- Campus Ambassador Program- Project- Geek of the Month- Campus Geek of the Month- Placement Course- Competitive Programming- Testimonials- Geek on the Top- Careers- Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? × search Custom Search Sort by: Relevance Relevance Date Login Hire with us! ▲ C++ Tutorial Introduction to C++ Programming Language Setting up C++ Development Environment C++ Programming Basics Functions in C/C++ Arrays in C/C++ Strings in C++ and How to Create them? Pointers in C/C++ with Examples C++ Classes and Objects Object Oriented Programming in C++ Namespace in C++ | Set 1 (Introduction) C/C++ Preprocessors Templates in C++ The C++ Standard Template Library (STL) Exception Handling in C++ File Handling through C++ Classes new and delete operators in C++ for dynamic memory C++ | Signal Handling Multithreading in C++ Arrays in C/C++ An array in C or C++ is a collection of items stored at contiguous memory locations and elements can be accessed randomly using indices of an array. They are used to store similar type of elements as in the data type must be the same for all elements. They can be used to store collection of primitive data types such as int, float, double, char, etc of any particular type. To add to it, an array in C or C++ can store derived data types such as the structures, pointers etc. Given below is the picturesque representation of an array. Why do we need arrays? We can use normal variables (v1, v2, v3, ..) when we have a small number of objects, but if we want to store a large number of instances, it becomes difficult to manage them with normal variables. The idea of an array is to represent many instances in one variable. Array declaration in C/C++: There are various ways in which we can declare an array. It can be done by specifying its type and size, by initializing it or both. Array declaration by specifying size filter_none edit close play_arrow link brightness_4 code // Array declaration by specifying size int arr1[10]; // With recent C/C++ versions, we can also // declare an array of user specified size int n = 10; int arr2[n]; chevron_right filter_none Array declaration by initializing elements filter_none edit close play_arrow link brightness_4 code // Array declaration by initializing elements int arr[] = { 10, 20, 30, 40 } // Compiler creates an array of size 4. // above is same as "int arr[4] = {10, 20, 30, 40}" chevron_right filter_none Array declaration by specifying size and initializing elements filter_none edit close play_arrow link brightness_4 code // Array declaration by specifying size and initializing // elements int arr[6] = { 10, 20, 30, 40 } // Compiler creates an array of size 6, initializes first // 4 elements as specified by user and rest two elements as 0. // above is same as "int arr[] = {10, 20, 30, 40, 0, 0}" chevron_right filter_none Advantages of an Array in C/C++: Random access of elements using array index. Use of less line of code as it creates a single array of multiple elements. Easy access to all the elements. Traversal through the array becomes easy using a single loop. Sorting becomes easy as it can be accomplished by writing less line of code. Disadvantages of an Array in C/C++: Allows a fixed number of elements to be entered which is decided at the time of declaration. Unlike a linked list, an array in C is not dynamic. Insertion and deletion of elements can be costly since the elements are needed to be managed in accordance with the new memory allocation. Facts about Array in C/C++: Accessing Array Elements: Array elements are accessed by using an integer index. Array index starts with 0 and goes till size of array minus 1. Example: C C++ C filter_none edit close play_arrow link brightness_4 code #include <stdio.h> int main() { int arr[5]; arr[0] = 5; arr[2] = -10; arr[3 / 2] = 2; // this is same as arr[1] = 2 arr[3] = arr[0]; printf("%d %d %d %d", arr[0], arr[1], arr[2], arr[3]); return 0; } chevron_right filter_none C++ filter_none edit close play_arrow link brightness_4 code #include <iostream> using namespace std; int main() { int arr[5]; arr[0] = 5; arr[2] = -10; // this is same as arr[1] = 2 arr[3 / 2] = 2; arr[3] = arr[0]; cout << arr[0] << " " << arr[1] << " " << arr[2] << " " << arr[3]; return 0; } chevron_right filter_none Output: 5 2 -10 5
 No Index Out of bound Checking: There is no index out of bounds checking in C/C++, for example, the following program compiles fine but may produce unexpected output when run. C C++ C filter_none edit close play_arrow link brightness_4 code // This C program compiles fine // as index out of bound // is not checked in C. #include <stdio.h> int main() { int arr[2]; printf("%d ", arr[3]); printf("%d ", arr[-2]); return 0; } chevron_right filter_none C++ filter_none edit close play_arrow link brightness_4 code // This C++ program compiles fine // as index out of bound // is not checked in C. #include <iostream> using namespace std; int main() { int arr[2]; cout << arr[3] << " "; cout << arr[-2] << " "; return 0; } chevron_right filter_none Output: 2008101287 4195777
 In C, it is not compiler error to initialize an array with more elements than the specified size. For example, the below program compiles fine and shows just Warning. filter_none edit close play_arrow link brightness_4 code #include <stdio.h> int main() { // Array declaration by initializing it with more // elements than specified size. int arr[2] = { 10, 20, 30, 40, 50 }; return 0; } chevron_right filter_none Warnings: prog.c: In function 'main':
prog.c:7:25: warning: excess elements in array initializer
  int arr[2] = { 10, 20, 30, 40, 50 };
                         ^
prog.c:7:25: note: (near initialization for 'arr')
prog.c:7:29: warning: excess elements in array initializer
  int arr[2] = { 10, 20, 30, 40, 50 };
                             ^
prog.c:7:29: note: (near initialization for 'arr')
prog.c:7:33: warning: excess elements in array initializer
  int arr[2] = { 10, 20, 30, 40, 50 };
                                 ^
prog.c:7:33: note: (near initialization for 'arr')
 Note: The program won’t compile in C++. If we save the above program as a .cpp, the program generates compiler error “error: too many initializers for ‘int [2]'”. The elements are stored at contiguous memory locations Example: C C++ C filter_none edit close play_arrow link brightness_4 code // C program to demonstrate that array elements are stored // contiguous locations #include <stdio.h> int main() { // an array of 10 integers. If arr[0] is stored at // address x, then arr[1] is stored at x + sizeof(int) // arr[2] is stored at x + sizeof(int) + sizeof(int) // and so on. int arr[5], i; printf("Size of integer in this compiler is %lu\n", sizeof(int)); for (i = 0; i < 5; i++) // The use of '&' before a variable name, yields // address of variable. printf("Address arr[%d] is %p\n", i, &arr[i]); return 0; } chevron_right filter_none C++ filter_none edit close play_arrow link brightness_4 code // C++ program to demonstrate that array elements // are stored contiguous locations #include <iostream> using namespace std; int main() { // an array of 10 integers. If arr[0] is stored at // address x, then arr[1] is stored at x + sizeof(int) // arr[2] is stored at x + sizeof(int) + sizeof(int) // and so on. int arr[5], i; cout << "Size of integer in this compiler is " << sizeof(int) << "\n"; for (i = 0; i < 5; i++) // The use of '&' before a variable name, yields // address of variable. cout << "Address arr[" << i << "] is " << &arr[i] << "\n"; return 0; } chevron_right filter_none Output: Size of integer in this compiler is 4
Address arr[0] is 0x7ffd636b4260
Address arr[1] is 0x7ffd636b4264
Address arr[2] is 0x7ffd636b4268
Address arr[3] is 0x7ffd636b426c
Address arr[4] is 0x7ffd636b4270
 Array vs Pointers Arrays and pointer are two different things (we can check by applying sizeof). The confusion happens because array name indicates the address of first element and arrays are always passed as pointers (even if we use square bracket). Please see Difference between pointer and array in C? for more details. What is vector in C++? Vector in C++ is a class in STL that represents an array. The advantages of vector over normal arrays are, We do not need pass size as an extra parameter when we declare a vector i.e, Vectors support dynamic sizes (we do not have to initially specify size of a vector). We can also resize a vector. Vectors have many in-built function like, removing an element, etc. To know more about functionalities provided by vector, please refer vector in C++ for more details. Related Articles: Array is C/C++ | Set 2 Initialization of multidimensional arrays in C/C++ How to print size of array parameter in C++? Properties of arrays in C language Maximum element in an array Array sum in C++ STL Sort an array in C++ Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. Don’t stop now and take your learning to the next level. Learn all the important concepts of Data Structures and Algorithms with the help of the most trusted course: DSA Self Paced. Become industry ready at a student-friendly price. My Personal Notes arrow_drop_up Save Recommended Posts: Split the given array into K sub-arrays such that maximum sum of all sub arrays is minimum Merge k sorted arrays | Set 2 (Different Sized Arrays) Count of possible arrays from prefix-sum and suffix-sum arrays Find sub-arrays from given two arrays such that they have equal sum Generate all possible sorted arrays from alternate elements of two given sorted arrays Maximum OR sum of sub-arrays of two different arrays Why is a[i] == i[a] in C/C++ arrays? Number of sub arrays with odd sum Sum of XOR of all sub-arrays of length K How to join two Arrays using STL in C++? Minimum LCM and GCD possible among all possible sub-arrays Introduction to Arrays C | Arrays | Question 2 C | Arrays | Question 5 C | Arrays | Question 6 C | Arrays | Question 7 C | Arrays | Question 14 C | Arrays | Question 1 Arrays in Java Multidimensional Arrays in C / C++ Improved By : sameer2209, RishabhPrabhu, AnkurVineet, jsanjana96 Article Tags : Arrays C C++ School Programming C Array and String C Basics CBSE - Class 11 cpp-array CPP-Basics Practice Tags : Arrays C CPP thumb_up 199 To-do Done 1.5 Based on 258 vote(s) Feedback/ Suggest ImprovementImprove Article Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page What are the data types for which it is not possible to create an array? Next last_page OLA Cabs Interview Experience | Set 4 (For SDE 2) Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular in Arrays Minimum salary hike for each employee such that no employee feels unfair Product of all Subarrays of an Array Count of substrings of length K with exactly K distinct characters Sliding Window Maximum : Set 2 Real-time application of Data Structures Most visited in C Top 10 Programming Languages for Blockchain Development Program to calculate Electricity Bill Average of Cubes of first N natural numbers Speed up Code executions with help of Pragma in C/C++ Pi(π) in C++ with Examples Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved We use cookies to ensure you have the best browsing experience on our website. By using our site, you acknowledge that you have read and understood our Cookie Policy & Privacy Policy Got It !