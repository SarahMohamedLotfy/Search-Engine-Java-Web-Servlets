Analysis of Algorithms | Set 4 (Analysis of Loops) - GeeksforGeeks , GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT CAT Quiz Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Science Quizzes Computer Subject CS – Placements CSS Dart Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Full Form Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap How To HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc MongoDB Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements PostgreSQL Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes R Language Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Solidity Sorting SQL Stack Strings Tableau Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics Operating Systems DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Hire with us!Analysis of Algorithms | Set 4 (Analysis of Loops) , GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT CAT Quiz Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Science Quizzes Computer Subject CS – Placements CSS Dart Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Full Form Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap How To HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc MongoDB Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements PostgreSQL Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes R Language Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Solidity Sorting SQL Stack Strings Tableau Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2021 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics Operating Systems DBMS Computer Networks Computer Organization and Architecture Theory of Computation Compiler Design Digital Logic Software Engineering Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Hire with us! ▲ | Set 1 (Asymptotic Analysis) | Set 2 (Worst, Average and Best Cases) | Set 3 (Asymptotic Notations) | Set 4 (Analysis of Loops) Analysis of Algorithm | Set 4 (Solving Recurrences) Analysis of Algorithm | Set 5 (Amortized Analysis Introduction) Minimize the maximum difference between adjacent elements in an array Expected Number of Trials to get N Consecutive Heads Design a data structure that supports insert, delete, getRandom in O(1) with duplicates Shortest Palindromic Substring Longest Palindrome in a String formed by concatenating its prefix and suffix Generate an array of given size with equal count and sum of odd and even numbers Paranthesis Theorem XOR of elements in a given range with updates using Fenwick Tree Number of ways to place two queens on a N*N chess-board Find intersection of intervals given by two lists Count of subarrays of size K which is a permutation of numbers from 1 to K Find a N-digit number such that it is not divisible by any of its digits Find and Count total factors of co-prime A or B in a given range 1 to N Number of ways to color N-K blocks using given operation Maximum length Subsequence with alternating sign and maximum Sum Count of elements which form a loop in an Array according to given constraints Difference between NP hard and NP complete problem Sum and Product of all even digit sum Nodes of a Singly Linked List Nodes with prime degree in an undirected Graph Create an array such that XOR of subarrays of length K is X Minimum sprinklers required to water a rectangular park Group all co-prime numbers from 1 to N Count of pairs in a given range with sum of their product and sum equal to their concatenated number Check if all nodes of the Binary Tree can be represented as sum of two primes | Set 4 (Analysis of Loops) We have discussed Asymptotic Analysis, Worst, Average and Best Cases and Asymptotic Notations in previous posts. In this post, analysis of iterative programs with simple examples is discussed. 1) O(1): Time complexity of a function (or set of statements) is considered as O(1) if it doesn’t contain loop, recursion and call to any other non-constant time function.    // set of non-recursive and non-loop statements For example swap() function has O(1) time complexity. A loop or recursion that runs a constant number of times is also considered as O(1). For example the following loop is O(1).    // Here c is a constant      for (int i = 1; i <= c; i++) {          // some O(1) expressions   } 2) O(n): Time Complexity of a loop is considered as O(n) if the loop variables is incremented / decremented by a constant amount. For example following functions have O(n) time complexity.    // Here c is a positive integer constant      for (int i = 1; i <= n; i += c) {          // some O(1) expressions   }   for (int i = n; i > 0; i -= c) {        // some O(1) expressions   } 3) O(nc): Time complexity of nested loops is equal to the number of times the innermost statement is executed. For example the following sample loops have O(n2) time complexity      for (int i = 1; i <=n; i += c) {       for (int j = 1; j <=n; j += c) {          // some O(1) expressions       }   }   for (int i = n; i > 0; i -= c) {       for (int j = i+1; j <=n; j += c) {          // some O(1) expressions   } For example Selection sort and Insertion Sort have O(n2) time complexity. 4) O(Logn) Time Complexity of a loop is considered as O(Logn) if the loop variables is divided / multiplied by a constant amount.    for (int i = 1; i <=n; i *= c) {       // some O(1) expressions   }   for (int i = n; i > 0; i /= c) {       // some O(1) expressions   } For example Binary Search(refer iterative implementation) has O(Logn) time complexity. Let us see mathematically how it is O(Log n). The series that we get in first loop is 1, c, c2, c3, … ck. If we put k equals to Logcn, we get cLogcn which is n. 5) O(LogLogn) Time Complexity of a loop is considered as O(LogLogn) if the loop variables is reduced / increased exponentially by a constant amount.    // Here c is a constant greater than 1      for (int i = 2; i <=n; i = pow(i, c)) {        // some O(1) expressions   }   //Here fun is sqrt or cuberoot or any other constant root   for (int i = n; i > 1; i = fun(i)) {        // some O(1) expressions   } See this for mathematical details. How to combine time complexities of consecutive loops? When there are consecutive loops, we calculate time complexity as sum of time complexities of individual loops.    for (int i = 1; i <=m; i += c) {          // some O(1) expressions   }   for (int i = 1; i <=n; i += c) {        // some O(1) expressions   }   Time complexity of above code is O(m) + O(n) which is O(m+n)   If m == n, the time complexity becomes O(2n) which is O(n).   How to calculate time complexity when there are many if, else statements inside loops? As discussed here, worst case time complexity is the most useful among best, average and worst. Therefore we need to consider worst case. We evaluate the situation when values in if-else conditions cause maximum number of statements to be executed. For example consider the linear search function where we consider the case when element is present at the end or not present at all. When the code is too complex to consider all if-else cases, we can get an upper bound by ignoring if else and other complex control statements. How to calculate time complexity of recursive functions? Time complexity of a recursive function can be written as a mathematical recurrence relation. To calculate time complexity, we must know how to solve recurrences. We will soon be discussing recurrence solving techniques as a separate post. Quiz on Next – Analysis of Algorithm | Set 4 (Solving Recurrences) Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Recommended Posts: | Set 1 (Asymptotic Analysis) | Big-O analysis Analysis of Algorithm | Set 5 (Amortized Analysis Introduction) | Set 5 (Practice Problems) Analysis of algorithms | little o and little omega notations | Set 3 (Asymptotic Notations) Asymptotic Analysis and comparison of sorting algorithms | Set 2 (Worst, Average and Best Cases) Algorithms Sample Questions | Set 3 | Time Order Analysis Analysis of different sorting techniques Amortized analysis for increment in counter Difference between Posteriori and Priori analysis Analysis of Algorithm | Set 4 (Solving Recurrences) Complexity Analysis of Binary Search Practice Questions on Time Complexity Analysis Complexity analysis of various operations of Binary Min Heap Time Complexity Analysis | Tower Of Hanoi (Recursion) Performance of loops (A caching question) Algorithms | Recurrences | Set 1 Pseudo-polynomial Algorithms Article Tags : Analysis Articles thumb_up 86 To-do Done 1.5 Based on 208 vote(s) Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page | Set 3 (Asymptotic Notations) Next last_page Analysis of Algorithm | Set 4 (Solving Recurrences) Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular in Analysis Last digit of a number raised to last digit of N factorial Proof that traveling salesman problem is NP Hard Proof that Hamiltonian Cycle is NP-Complete Proof that Dominant Set of a Graph is NP-Complete Two player game in which a player can remove all occurrences of a number Most visited in Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Must Do Coding Questions Company-wise Average of Cubes of first N natural numbers Sum of bit differences for numbers from 0 to N Logarithm tricks for Competitive Programming ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved